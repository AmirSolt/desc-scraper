// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom_sqlc.go

package models

import (
	"context"
)

// iteratorForCreateVideos implements pgx.CopyFromSource.
type iteratorForCreateVideos struct {
	rows                 []CreateVideosParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateVideos) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateVideos) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].YtID,
		r.rows[0].Title,
		r.rows[0].Tags,
		r.rows[0].DefaultLanguage,
		r.rows[0].Description,
		r.rows[0].LiveBroadcastContent,
		r.rows[0].PublishedAt,
		r.rows[0].ChannelID,
	}, nil
}

func (r iteratorForCreateVideos) Err() error {
	return nil
}

func (q *Queries) CreateVideos(ctx context.Context, arg []CreateVideosParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"videos"}, []string{"yt_id", "title", "tags", "default_language", "description", "live_broadcast_content", "published_at", "channel_id"}, &iteratorForCreateVideos{rows: arg})
}
